@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<MudTable Items="@Elements" Hover="true" Breakpoint="Breakpoint.None" Dense="true" Class="pt-6" Striped="true" Bordered="true">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh></MudTh>
        <MudTh>最速</MudTh>
        <MudTh>準速</MudTh>
        <MudTh>無振</MudTh>
        <MudTh>下降</MudTh>
        <MudTh>最遅</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="PokemonImage">
            <PokeImageView PokeNo="@context.No" Width="42" Height="42" />
        </MudTd>
        <MudTd>
            <MudText Typo="Typo.body1">@context.Name</MudText>
        </MudTd>
        <MudTd DataLabel="Fastest">
            <MudText Typo="Typo.body1" Color="@(context.SpeedRank == Common.SpeedRank.Fastest ? Color.Secondary : Color.Default)">@context.FastestSpeed</MudText>
        </MudTd>
        <MudTd DataLabel="Fast">
            <MudText Typo="Typo.body1" Color="@(context.SpeedRank == Common.SpeedRank.Fast ? Color.Secondary : Color.Default)">@context.FastSpeed</MudText>
        </MudTd>
        <MudTd DataLabel="Default">
            <MudText Typo="Typo.body1" Color="@(context.SpeedRank == Common.SpeedRank.Default ? Color.Secondary : Color.Default)">@context.DefaultSpeed</MudText>
        </MudTd>
        <MudTd DataLabel="Slow">
            <MudText Typo="Typo.body1">@context.SlowSpeed</MudText>
        </MudTd>
        <MudTd DataLabel="Slowest">
            <MudText Typo="Typo.body1">@context.SlowestSpeed</MudText>
        </MudTd>
    </RowTemplate>
</MudTable>
@code {
    /// <summary>
    /// パーティ所有者
    /// </summary>
    [Parameter]
    public Common.PartyOwner PartyOwner { get; set; }

    /// <summary>
    /// パーティ
    /// </summary>
    private PokeInfoModel[] party = Array.Empty<PokeInfoModel>();

    /// <summary>
    /// テーブルデータ
    /// </summary>
    private List<PokeSpeedRealNumberRowModel> Elements = new List<PokeSpeedRealNumberRowModel>();

    /// <summary>
    /// コンストラクタ
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        // Session Storageからパーティ情報の読み込み
        switch (PartyOwner)
        {
            case Common.PartyOwner.I:
                party = await sessionStorage.GetItemAsync<PokeInfoModel[]>("myParty") ?? new PokeInfoModel[6] { new(), new(), new(), new(), new(), new() };
                break;

            case Common.PartyOwner.You:
                party = await sessionStorage.GetItemAsync<PokeInfoModel[]>("yourParty") ?? new PokeInfoModel[6] { new(), new(), new(), new(), new(), new() };
                break;
        }

        // テーブルの行データの作成
        Elements.Clear();
        foreach (var pokeInfo in party)
        {
            if (!string.IsNullOrEmpty(pokeInfo.Name))
            {
                Elements.Add(new PokeSpeedRealNumberRowModel()
                    {
                        No = pokeInfo.No,
                        Name = pokeInfo.Name,
                        FastestSpeed = Common.CalcSpeedRealNumber((int)pokeInfo.S, Common.SpeedRank.Fastest),
                        FastSpeed = Common.CalcSpeedRealNumber((int)pokeInfo.S, Common.SpeedRank.Fast),
                        DefaultSpeed = Common.CalcSpeedRealNumber((int)pokeInfo.S, Common.SpeedRank.Default),
                        SlowSpeed = Common.CalcSpeedRealNumber((int)pokeInfo.S, Common.SpeedRank.Slow),
                        SlowestSpeed = Common.CalcSpeedRealNumber((int)pokeInfo.S, Common.SpeedRank.Slowest),
                        SpeedRank = pokeInfo.SpeedRank,
                    });
            }
        };
    }
}
